#!/usr/bin/env bash

animation="skull"

delay=0.2

c0=$(echo -e "\e[0m")
c1=$(echo -e "\e[31m")
h1=$(echo -e "\e[1;31m")
mode=true
info=()

input() {
	while getopts "hna:f:c:" option; do
		case ${option} in
			h ) echo "dayfetch: animated system info fetch"
				echo "usage: dayfetch [options]"
				echo "-h display this help message"
				echo "-a animation (skull, moon, face, bunny, earth)"
				echo "-f fps"
				echo "-c color (1-7)"
				echo "-n disable info"
				exit
				;;
			a ) animation=${OPTARG} ;;
			f ) delay=$(bc <<< "scale=3; 1/${OPTARG}") ;;
			c ) c1=$(echo -e "\e[3${OPTARG}m")
				h1=$(echo -e "\e[1;3${OPTARG}m")
				;;
			n ) mode=false
				;;
		esac
	done
}

check() {
	if [ -d ~/.local/share/dayfetch/$animation ]; then
		path=~/.local/share/dayfetch/$animation
	elif [ -d animations/$animation ]; then
		path=animations/$animation
	else
		echo "Animation not found"
		exit
	fi
}

fetch() {	
	username=${USER:-$(id -un)}
	hostname=${HOSTNAME:-$(hostname)}
	if [ -f /etc/os-release ]
	then
		source /etc/os-release
	fi
	os=${PRETTY_NAME:-$(lsb_release -sd | tr -d '"')}
	kernel=$(uname -r)
	shell=${SHELL##*/}
	uptime=$(uptime -p)
	uptime=${uptime#* }

	if [ -n "${username}" ] & [ -n "${hostname}" ]; then
		info+=("${h1}${username}${c0}@${h1}${hostname}${c0}")
	fi

	if [ -n "${os}" ]; then
		info+=("${h1}os${c0}     ${os}")
	fi

	if [ -n "${kernel}" ]; then
		info+=("${h1}kernel${c0} ${kernel}")
	fi

	if [ -n "${shell}" ]; then
		info+=("${h1}shell${c0}  ${shell}")
	fi

	if [ -n "${uptime}" ]; then
		info+=("${h1}uptime${c0} ${uptime}")
	fi

	info_length=${#info[@]}
}

onexit () {
	clear
	echo -e "\e[?25h"
}

oninit() {
	trap onexit EXIT
	trap clear SIGWINCH
	echo -e "\e[?25l"
	clear
}

draw() {
	i=0
	while IFS= read -r line; do
		line=$(echo "${line}" | sed "s/{c1}/${c1}/g;s/{c0}/${c0}/g")
		if ${mode} && [ ${i} -lt ${info_length} ]; then
			line+=${info[i]}
			((i++))
		fi
		echo "${line}"
	done < $1

}

loop() {
	while true; do
		for frame in $(ls $path | sort -g); do
			echo -e "\e[H"
			draw ${path}/${frame}
			sleep ${delay}
		done
	done
}

main() {
	input $@
	check
	if ${mode}; then
		fetch
	fi
	oninit
	loop
}


main $@

